<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="SampleClass.cs" />
  </ItemGroup>

  <!-- In most cases users can just refer to the nuget package -->
  <ItemGroup>
    <PackageReference Include="CodegenCS.SourceGenerator" Version="3.5.0" />
  </ItemGroup>
  
  <!--
  In the rare cases where you need to Debug (CodegenCS.SourceGenerator or your own Source Generator), 
  use a ProjectReference with OutputItemType="Analyzer" ReferenceOutputAssembly="false"
  -->
  
  <!--<ItemGroup>
    <ProjectReference Include="..\CodegenCS.SourceGenerator\CodegenCS.SourceGenerator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" PrivateAssets="all"  />
  </ItemGroup>-->
  
  
  <!--
  Sometimes in Release Mode ProjectReference fails for a thousand different reasons (or for no reason). Maybe it's because I'm not packing nugets for TemplateBuilder/TemplateLauncher?
  Some things to try when this happens: close Visual Studio, delete all copies of CodegenCS.SourceGenerator.dll under %TEMP%, clean, switch release to debug, etc.
  -->

  <!-- 
  CodegenCS.SourceGenerator will look for context.AdditionalFiles, but you should expose (and use) the custom property CodegenCSOutput
  If CodegenCSOutput="Memory" then the generated files (added to the compilation) are NOT saved to disk
  If CodegenCSOutput="File" then the generated files are saved to disk
  -->
  <ItemGroup>
    <CompilerVisibleItemMetadata Include="AdditionalFiles" MetadataName="CodegenCSOutput" />
    <AdditionalFiles Include="Template1.csx" CodegenCSOutput="File" />
    <AdditionalFiles Include="Template2.csx" CodegenCSOutput="Memory" />
    <AdditionalFiles Include="Template3.csx" CodegenCSOutput="Memory" />
  </ItemGroup>
  <ItemGroup>
    <None Include="SampleClass.cs" />
  </ItemGroup>

</Project>
